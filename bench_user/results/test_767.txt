
The Knowledge Scheme currently contains the following lemmas:
	(forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
	(forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
	(forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
	(forall ((Lst)) (0<=(len _qv_10)))

Simplified goal: (forall (INT (Lst) (Lst)) ((n>=0)->((drop n (append xs ys))=(append (drop n xs) (drop (minus n (len xs)) ys)))))


Base case:       ((drop _v_11 (append nil _v_12))=(append (drop _v_11 nil) (drop (minus _v_11 (len nil)) _v_12)))
{
  proven trivially
}
Inductive step:  ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=0)
    | Assumptions [1]: (forall (INT) ((_qv_1>=0)->((minus 0 _qv_1)=0)))
    | Assumptions [2]: (forall (INT) ((_qv_2>=0)->((minus _qv_2 0)=_qv_2)))
    | Assumptions [3]: (forall (INT INT) (((_qv_3>=0)&&(_qv_4>=0))->((minus 1+_qv_3 1+_qv_4)=(minus _qv_3 _qv_4))))
    | Assumptions [4]: (forall (INT INT) (((_qv_5>=0)&&(_qv_6>=0))->((minus _qv_5 _qv_6)=ite(_qv_5<_qv_6, 0, _qv_5-_qv_6))))
    | Assumptions [5]: (forall ((Lst)) ((append nil _qv_7)=_qv_7))
    | Assumptions [6]: (forall (INT (Lst) (Lst)) ((append (cons _qv_8 _qv_9) _qv_10)=(cons _qv_8 (append _qv_9 _qv_10))))
    | Assumptions [7]: (forall (INT (Lst)) ((len (cons _qv_11 _qv_12))=(1+(len _qv_12))))
    | Assumptions [8]: (forall ((Lst)) ((len _qv_13)>=0))
    | Assumptions [9]: (forall (INT) ((drop _qv_14 nil)=nil))
    | Assumptions [10]: (forall ((Lst)) ((drop 0 _qv_15)=_qv_15))
    | Assumptions [11]: (forall (INT INT (Lst)) ((_qv_16>=0)->((drop _qv_16+1 (cons _qv_17 _qv_18))=(drop _qv_16 _qv_18))))
    | Assumptions [12]: (_v_11>=0)
    | Assumptions [13]: (forall (INT (Lst)) ((n>=0)->((drop n (append _t_14 ys))=(append (drop n _t_14) (drop (minus n (len _t_14)) ys)))))
    | Assumptions [14]: ((minus 0 _v_11)=0)
    | Assumptions [15]: ((minus _v_11 0)=_v_11)
    | Assumptions [16]: (forall (INT (Lst)) ((drop _v_11+1 (cons _qv_17 _qv_18))=(drop _v_11 _qv_18)))
    | Assumptions [17]: (forall ((Lst)) ((drop _v_11 (append _t_14 ys))=(append (drop _v_11 _t_14) (drop (minus _v_11 (len _t_14)) ys))))
    ====================
  }
  rewritten [6]: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
  rewritten [7]: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 1+(len _t_14)) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
  rewritten [7]: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 1+(len _t_14)) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
  rewritten [7]: ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 1+(len _t_14)) _v_12)))
  rewritten [6]: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
  rewritten [6]: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
  rewritten [6]: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
  rewritten [7]: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 1+(len _t_14)) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
  rewritten [7]: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 1+(len _t_14)) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
  rewritten [7]: ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 1+(len _t_14)) _v_12)))
  rewritten [6]: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
  rewritten [6]: ((drop _v_11 (cons _t_13 (append _t_14 _v_12)))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len _t_14)+1) _v_12)))
CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

  backtrack to: ((drop _v_11 (append (cons _t_13 _t_14) _v_12))=(append (drop _v_11 (cons _t_13 _t_14)) (drop (minus _v_11 (len (cons _t_13 _t_14))) _v_12)))

Base case:       ((drop _v_19 (append _v_20 nil))=(append (drop _v_19 _v_20) (drop (minus _v_19 (len _v_20)) nil)))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=0)
    | Assumptions [1]: (forall (INT) ((_qv_1>=0)->((minus 0 _qv_1)=0)))
    | Assumptions [2]: (forall (INT) ((_qv_2>=0)->((minus _qv_2 0)=_qv_2)))
    | Assumptions [3]: (forall (INT INT) (((_qv_3>=0)&&(_qv_4>=0))->((minus 1+_qv_3 1+_qv_4)=(minus _qv_3 _qv_4))))
    | Assumptions [4]: (forall (INT INT) (((_qv_5>=0)&&(_qv_6>=0))->((minus _qv_5 _qv_6)=ite(_qv_5<_qv_6, 0, _qv_5-_qv_6))))
    | Assumptions [5]: (forall ((Lst)) ((append nil _qv_7)=_qv_7))
    | Assumptions [6]: (forall (INT (Lst) (Lst)) ((append (cons _qv_8 _qv_9) _qv_10)=(cons _qv_8 (append _qv_9 _qv_10))))
    | Assumptions [7]: (forall (INT (Lst)) ((len (cons _qv_11 _qv_12))=(1+(len _qv_12))))
    | Assumptions [8]: (forall ((Lst)) ((len _qv_13)>=0))
    | Assumptions [9]: (forall (INT) ((drop _qv_14 nil)=nil))
    | Assumptions [10]: (forall ((Lst)) ((drop 0 _qv_15)=_qv_15))
    | Assumptions [11]: (forall (INT INT (Lst)) ((_qv_16>=0)->((drop _qv_16+1 (cons _qv_17 _qv_18))=(drop _qv_16 _qv_18))))
    | Assumptions [12]: (_v_11>=0)
    | Assumptions [13]: (forall (INT (Lst)) ((n>=0)->((drop n (append _t_14 ys))=(append (drop n _t_14) (drop (minus n (len _t_14)) ys)))))
    | Assumptions [14]: ((minus 0 _v_11)=0)
    | Assumptions [15]: ((minus _v_11 0)=_v_11)
    | Assumptions [16]: (forall (INT (Lst)) ((drop _v_11+1 (cons _qv_17 _qv_18))=(drop _v_11 _qv_18)))
    | Assumptions [17]: (forall ((Lst)) ((drop _v_11 (append _t_14 ys))=(append (drop _v_11 _t_14) (drop (minus _v_11 (len _t_14)) ys))))
    | Assumptions [18]: (_v_19>=0)
    | Assumptions [19]: ((minus 0 _v_19)=0)
    | Assumptions [20]: ((minus _v_19 0)=_v_19)
    | Assumptions [21]: (forall (INT (Lst)) ((drop _v_19+1 (cons _qv_17 _qv_18))=(drop _v_19 _qv_18)))
    | Assumptions [22]: (forall ((Lst)) ((drop _v_19 (append _t_14 ys))=(append (drop _v_19 _t_14) (drop (minus _v_19 (len _t_14)) ys))))
    ====================
  }
  rewritten [9]: ((drop _v_19 (append _v_20 nil))=(append (drop _v_19 _v_20) nil))

The Knowledge Scheme currently contains the following lemmas:
	(forall (INT INT) ((minus _qv_21 _qv_22)=(minus _qv_22 _qv_21)))
	(forall (INT INT INT) ((minus (minus _qv_23 _qv_24) _qv_25)=(minus _qv_23 (minus _qv_24 _qv_25))))
	(forall ((Lst) (Lst)) ((append _qv_26 _qv_27)=(append _qv_27 _qv_26)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_28 _qv_29) _qv_30)=(append _qv_28 (append _qv_29 _qv_30))))
	(forall ((Lst)) (0<=(len _qv_31)))


The Knowledge Scheme currently contains the following lemmas:
	(forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
	(forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
	(forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
	(forall ((Lst)) (0<=(len _qv_46)))

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil)))=(append (drop _v_48 (cons _v_49 (append (drop _v_48 nil) nil))) (append (drop _v_48 nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append nil nil)))=(append (drop _v_48 (cons _v_49 (append nil nil))) (append nil nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append nil nil)))=(append (drop _v_48 (cons _v_49 (append nil nil))) (append nil nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append nil nil)))=(append (drop _v_48 (cons _v_49 (append nil nil))) (append nil nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append nil nil)))=(append (drop _v_48 (cons _v_49 (append nil nil))) (append nil nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append nil nil)))=(append (drop _v_48 (cons _v_49 (append nil nil))) (append nil nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append nil nil) (append nil nil)))) (append (append nil nil) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append nil nil)))=(append (drop _v_48 (cons _v_49 (append nil nil))) (append nil nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append nil nil)))=(append (drop _v_48 (cons _v_49 (append nil nil))) (append nil nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append nil nil)))=(append (drop _v_48 (cons _v_49 (append nil nil))) (append nil nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append nil nil)))=(append (drop _v_48 (cons _v_49 (append nil nil))) (append nil nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append nil nil)))=(append (drop _v_48 (cons _v_49 (append nil nil))) (append nil nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))) (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil))))) (append (append (append (append nil nil) (append nil nil)) (append (append nil nil) (append nil nil))) (append (append nil nil) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))))) (append (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil))) (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil)))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) nil) nil))) (append (append (append nil nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil))) (append (append (append (append (drop _v_48 nil) nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) nil) nil))) (append (append (append (drop _v_48 nil) nil) nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append nil nil) nil)))=(append (drop _v_48 (cons _v_49 (append (append nil nil) nil))) (append (append nil nil) nil)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil))))) (append (append (append (drop _v_48 (append nil nil)) (append nil nil)) (append (drop _v_48 (append nil nil)) (append nil nil))) (append (drop _v_48 (append nil nil)) (append nil nil)))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil))))=(append (drop _v_48 (cons _v_49 (append (append (append nil nil) (append nil nil)) (append nil nil)))) (append (append (append nil nil) (append nil nil)) (append nil nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil)))) (append (append (append (append (append (drop _v_48 nil) nil) nil) nil) (append (append (append (drop _v_48 nil) nil) nil) nil)) (append (append (append (drop _v_48 nil) nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil)))) (append (append (append (append (drop _v_48 nil) nil) nil) (append (append (drop _v_48 nil) nil) nil)) (append (append (drop _v_48 nil) nil) nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_46)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT) ((minus _qv_36 _qv_37)=(minus _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_38 _qv_39) _qv_40)=(minus _qv_38 (minus _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_41 _qv_42)=(append _qv_42 _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_43 _qv_44) _qv_45)=(append _qv_43 (append _qv_44 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil))))=(append (drop _v_48 (cons _v_49 (append (append (append (drop _v_48 nil) nil) (append (drop _v_48 nil) nil)) (append (drop _v_48 nil) nil)))) (appen