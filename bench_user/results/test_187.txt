
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
	(forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
	(forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))

Simplified goal: (forall ((Lst)) (even (len (append x x))))


Base case:       (even (len (append nil nil)))
{
  proven trivially
}
Inductive step:  (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Nat)) ((even (succ _qv_5))=(!(even _qv_5))))
    | Assumptions [4]: (forall ((Lst)) ((append nil _qv_6)=_qv_6))
    | Assumptions [5]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_7 _qv_8) _qv_9)=(cons _qv_7 (append _qv_8 _qv_9))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_10 _qv_11))=(succ (len _qv_11))))
    | Assumptions [7]: (even (len (append _t_10 _t_10)))
    | Assumptions [8]: ((nat-to-int (len nil))=0)
    | Assumptions [9]: (even (len nil))
    ====================
  }
  rewritten [5]: (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
  rewritten [6]: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
  rewritten [3]: (!(even (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
  rewritten [3]: (!(even (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
  rewritten [6]: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
  rewritten [3]: (!(even (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
  rewritten [3]: (!(even (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
  rewritten [5]: (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
  rewritten [6]: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
  rewritten [3]: (!(even (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
  rewritten [3]: (!(even (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
  rewritten [6]: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
  rewritten [3]: (!(even (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
  rewritten [3]: (!(even (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (succ (len (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (len (cons _t_9 (append _t_10 (cons _t_9 _t_10)))))
CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: (even (len (append (cons _t_9 _t_10) (cons _t_9 _t_10))))
Unknown
sat
