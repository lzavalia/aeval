
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
	(forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
	(forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
	(forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))

Simplified goal: (forall ((Lst)) ((butlast xs)=(take (minus (len xs) (succ zero)) xs)))


Base case:       ((butlast nil)=(take (minus (len nil) (succ zero)) nil))
{
  proven trivially
}
Inductive step:  ((butlast (cons _t_12 _t_13))=(take (minus (len (cons _t_12 _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
{
  {
    ====================
    | Assumptions [0]: ((butlast nil)=nil)
    | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
    | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
    | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
    | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
    | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
    | Assumptions [11]: ((nat-to-int (len nil))=0)
    | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
    | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
    | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
    | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
    | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
    ====================
  }
  rewritten [6]: ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
  rewritten [4]: ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
  rewritten [10]: (ite(_t_13=nil, nil, (cons _t_12 (butlast _t_13)))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
  proceed with (part 1/2): ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))) to assumptions
  proceed with (part 2/2): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: (_t_13!=nil)
      | Assumptions [19]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: (_t_13!=nil)
      | Assumptions [19]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
  rewritten [13]: ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  rewritten [10]: (ite(_t_13=nil, nil, (cons _t_12 (butlast _t_13)))=(take (len _t_13) (cons _t_12 _t_13)))
  proceed with (part 1/2): ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13)))) to assumptions
  proceed with (part 2/2): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  rewritten [10]: (ite(_t_13=nil, nil, (cons _t_12 (butlast _t_13)))=(take (len _t_13) (cons _t_12 _t_13)))
  proceed with (part 1/2): ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13)))) to assumptions
  proceed with (part 2/2): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
  rewritten [10]: (ite(_t_13=nil, nil, (cons _t_12 (butlast _t_13)))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
  proceed with (part 1/2): ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))) to assumptions
  proceed with (part 2/2): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
  rewritten [13]: ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  rewritten [10]: (ite(_t_13=nil, nil, (cons _t_12 (butlast _t_13)))=(take (len _t_13) (cons _t_12 _t_13)))
  proceed with (part 1/2): ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13)))) to assumptions
  proceed with (part 2/2): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  rewritten [10]: (ite(_t_13=nil, nil, (cons _t_12 (butlast _t_13)))=(take (len _t_13) (cons _t_12 _t_13)))
  proceed with (part 1/2): ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13)))) to assumptions
  proceed with (part 2/2): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_12 _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_12 _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_12 _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
  rewritten [10]: (ite(_t_13=nil, nil, (cons _t_12 (butlast _t_13)))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
  proceed with (part 1/2): ((_t_13=nil)->(nil=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_13=nil)->(nil=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))) to assumptions
  proceed with (part 2/2): ((_t_13!=nil)->((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [5]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [7]: (forall ((Nat)) ((take _qv_13 nil)=nil))
      | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_15) (cons _qv_16 _qv_17))=(cons _qv_16 (take _qv_15 _qv_17))))
      | Assumptions [9]: (forall ((Nat) (Lst)) ((last (cons _qv_18 _qv_19))=ite(_qv_19=nil, _qv_18, (last _qv_19))))
      | Assumptions [10]: (forall ((Nat) (Lst)) ((butlast (cons _qv_20 _qv_21))=ite(_qv_21=nil, nil, (cons _qv_20 (butlast _qv_21)))))
      | Assumptions [11]: ((nat-to-int (len nil))=0)
      | Assumptions [12]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [13]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [14]: (forall ((Lst)) ((take (len nil) _qv_14)=nil))
      | Assumptions [15]: ((butlast _t_13)=(take (minus (len _t_13) (succ (len nil))) _t_13))
      | Assumptions [16]: ((take (minus (len _t_13) (succ (len nil))) _t_13)=(butlast _t_13))
      | Assumptions [17]: ((_t_13=nil)->(nil=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13))))
      | Assumptions [18]: ((_t_13=nil)->(nil=(take (len _t_13) (cons _t_12 _t_13))))
      | Assumptions [19]: ((_t_13=nil)->(nil=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13))))
      | Assumptions [20]: (_t_13!=nil)
      ====================
    }
    current subgoal: ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [4]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [4]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [4]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [4]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [4]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [4]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [4]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (succ (len _t_13)) (succ (len nil))) (cons _t_12 _t_13)))
    rewritten [4]: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (butlast _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [15]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (minus (len _t_13) (len nil)) (cons _t_12 _t_13)))
    rewritten [13]: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_9))=(nat-to-int _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_10) (succ _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_10 _qv_11))=(minus (succ _qv_11) (succ _qv_10))))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
    rewritten [16]: ((cons _t_12 (butlast _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t_13) (cons _t_12 _t_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_12 (take (minus (len _t_13) (succ (len nil))) _t_13))=(take (len _t