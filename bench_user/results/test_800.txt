
The Knowledge Scheme currently contains the following lemmas:
	(forall (INT) (0<=(double _qv_0)))
	(forall (INT) ((double (double _qv_1))=_qv_1))
	(forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
	(forall ((Lst)) (0<=(len _qv_7)))
	(forall (INT) ((double (double _qv_8))=(double _qv_8)))
	(forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))

Simplified goal: (forall ((Lst)) ((len (append x x))=(double (len x))))


Base case:       ((len (append nil nil))=(double (len nil)))
{
  proven trivially
}
Inductive step:  ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
{
  {
    ====================
    | Assumptions [0]: ((double 0)=0)
    | Assumptions [1]: ((len nil)=0)
    | Assumptions [2]: (forall (INT) ((_qv_1>=0)->((double 1+_qv_1)=(1+(1+(double _qv_1))))))
    | Assumptions [3]: (forall (INT INT) ((_qv_2>=0)->((double _qv_2)=(2*_qv_2))))
    | Assumptions [4]: (forall ((Lst)) ((append nil _qv_4)=_qv_4))
    | Assumptions [5]: (forall (INT (Lst) (Lst)) ((append (cons _qv_5 _qv_6) _qv_7)=(cons _qv_5 (append _qv_6 _qv_7))))
    | Assumptions [6]: (forall (INT (Lst)) ((len (cons _qv_8 _qv_9))=(1+(len _qv_9))))
    | Assumptions [7]: (forall ((Lst)) ((len _qv_10)>=0))
    | Assumptions [8]: ((len (append _t_11 _t_11))=(double (len _t_11)))
    | Assumptions [9]: ((double (len _t_11))=(len (append _t_11 _t_11)))
    ====================
  }
  rewritten [0]: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
  rewritten [5]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
  rewritten [6]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double 1+(len _t_11)))
  rewritten [0]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [1]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [8]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [9]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [1]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [8]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [9]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
  rewritten [6]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double 1+(len _t_11)))
  rewritten [0]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [1]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [8]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [9]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [1]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [8]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [9]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len (cons _t_10 _t_11)))))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
  rewritten [6]: ((len (append _t_11 (cons _t_10 _t_11)))=((double 1+(len _t_11))+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len (cons _t_10 _t_11)))+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len (cons _t_10 _t_11))))
CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
  rewritten [6]: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double 1+(len _t_11)))
  rewritten [0]: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
  rewritten [5]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
  rewritten [5]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
  rewritten [1]: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
  rewritten [5]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
  rewritten [5]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
  rewritten [5]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
  rewritten [8]: ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len _t_11)+1))
  rewritten [5]: ((len (cons _t_10 (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [6]: ((1+(len (append _t_11 (cons _t_10 _t_11))))=(double (len _t_11)+1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [1]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [8]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [9]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_8))=(double _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))
USE ASSUMPTION FAILED

  backtrack to: ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
  rewritten [0]: ((len (append _t_11 (cons _t_10 _t_11)))=(-1+(double (len _t_11)+1)))
CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) (0<=(double _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall (INT) ((double (double _qv_1))=_qv_1))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_11 (cons _t_10 _t_11)))=((double (len _t_11)+1)+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_7)))
USE ASSUMPTION FAILED

CURRENT 