
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat) (Nat)) ((less _qv_0 _qv_1)=(less _qv_1 _qv_0)))
	(forall ((Lst)) ((sort (sort _qv_2))=_qv_2))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_3 (cons _qv_4 _qv_5))=(cons (insort _qv_3 _qv_4) (insort _qv_3 _qv_5))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_6 (insort _qv_7 _qv_8))=(insort (cons _qv_6 _qv_7) (cons _qv_6 _qv_8))))

Simplified goal: (forall ((Lst)) ((len (sort l))=(len l)))


Base case:       ((len (sort nil))=(len nil))
{
  proven trivially
}
Inductive step:  ((len (sort (cons _t_9 _t_10)))=(len (cons _t_9 _t_10)))
{
  {
    ====================
    | Assumptions [0]: ((sort nil)=nil)
    | Assumptions [1]: (forall ((Nat) (Nat)) ((less (succ _qv_3) (succ _qv_4))=(less _qv_3 _qv_4)))
    | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((insort _qv_7 nil)=(cons _qv_7 nil)))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((insort _qv_8 (cons _qv_9 _qv_10))=ite((less _qv_8 _qv_9), (cons _qv_8 (cons _qv_9 _qv_10)), (cons _qv_9 (insort _qv_8 _qv_10)))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((sort (cons _qv_11 _qv_12))=(insort _qv_11 (sort _qv_12))))
    | Assumptions [6]: ((len (sort _t_10))=(len _t_10))
    | Assumptions [7]: ((len _t_10)=(len (sort _t_10)))
    | Assumptions [8]: (forall ((Nat)) (!(less _qv_1 (len nil))))
    | Assumptions [9]: (forall ((Nat)) (less (len nil) (succ _qv_2)))
    ====================
  }
  rewritten [2]: ((len (sort (cons _t_9 _t_10)))=(succ (len _t_10)))
  rewritten [5]: ((len (insort _t_9 (sort _t_10)))=(succ (len _t_10)))
  rewritten [7]: ((len (insort _t_9 (sort _t_10)))=(succ (len (sort _t_10))))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat) (Nat)) ((less _qv_12 _qv_13)=(less _qv_13 _qv_12)))
	(forall ((Lst)) ((sort (sort _qv_14))=_qv_14))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_15 (cons _qv_16 _qv_17))=(cons (insort _qv_15 _qv_16) (insort _qv_15 _qv_17))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_18 (insort _qv_19 _qv_20))=(insort (cons _qv_18 _qv_19) (cons _qv_18 _qv_20))))

  proven by induction: ((len (insort _t_9 _w_11))=(succ (len _w_11)))
  rewriting done
  rewriting done
}

Proved
unsat
