
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
	(forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
	(forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_6 (cons _qv_7 _qv_8))=(cons (insort _qv_6 _qv_7) (insort _qv_6 _qv_8))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_9 (insort _qv_10 _qv_11))=(insort (cons _qv_9 _qv_10) (cons _qv_9 _qv_11))))

Simplified goal: (forall ((Nat) (Nat) (Lst)) ((!(x=y))->((count x (insort y z))=(count x z))))


Base case:       ((count zero (insort _v_12 _v_13))=(count zero _v_13))
{
  {
    ====================
    | Assumptions [0]: ((nat-to-int zero)=0)
    | Assumptions [1]: ((sort nil)=nil)
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [3]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [4]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((less (succ _qv_7) (succ _qv_8))=(less _qv_7 _qv_8)))
    | Assumptions [6]: (forall ((Nat) (Nat)) ((less _qv_9 _qv_10)=((nat-to-int _qv_9)<(nat-to-int _qv_10))))
    | Assumptions [7]: (forall ((Nat)) ((count _qv_11 nil)=zero))
    | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((count _qv_12 (cons _qv_13 _qv_14))=ite(_qv_12=_qv_13, (succ (count _qv_12 _qv_14)), (count _qv_12 _qv_14))))
    | Assumptions [9]: (forall ((Nat)) ((insort _qv_15 nil)=(cons _qv_15 nil)))
    | Assumptions [10]: (forall ((Nat) (Nat) (Lst)) ((insort _qv_16 (cons _qv_17 _qv_18))=ite((less _qv_16 _qv_17), (cons _qv_16 (cons _qv_17 _qv_18)), (cons _qv_17 (insort _qv_16 _qv_18)))))
    | Assumptions [11]: (forall ((Nat) (Lst)) ((sort (cons _qv_19 _qv_20))=(insort _qv_19 (sort _qv_20))))
    | Assumptions [12]: (forall ((Nat)) (!(less _qv_5 zero)))
    | Assumptions [13]: (forall ((Nat)) (less zero (succ _qv_6)))
    | Assumptions [14]: (zero!=_v_12)
    ====================
  }
  rewritten [3]: ((nat-to-int (count zero (insort _v_12 _v_13)))=(nat-to-int (count zero _v_13)))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
	(forall ((Nat)) (0<=(nat-to-int _qv_15)))
	(forall ((Nat) (Nat)) ((less _qv_16 _qv_17)=(less _qv_17 _qv_16)))
	(forall ((Lst)) ((sort (sort _qv_18))=_qv_18))
	(forall ((Nat)) ((nat-to-int (succ _qv_19))=(nat-to-int _qv_19)))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_20 (cons _qv_21 _qv_22))=(cons (insort _qv_20 _qv_21) (insort _qv_20 _qv_22))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_23 (insort _qv_24 _qv_25))=(insort (cons _qv_23 _qv_24) (cons _qv_23 _qv_25))))

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_16 _qv_17)=(less _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_19))=(nat-to-int _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_20 (cons _qv_21 _qv_22))=(cons (insort _qv_20 _qv_21) (insort _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_23 (insort _qv_24 _qv_25))=(insort (cons _qv_23 _qv_24) (cons _qv_23 _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_16 _qv_17)=(less _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_19))=(nat-to-int _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_20 (cons _qv_21 _qv_22))=(cons (insort _qv_20 _qv_21) (insort _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort (succ _t_27) _v_26)))=(nat-to-int (count zero _v_26)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_23 (insort _qv_24 _qv_25))=(insort (cons _qv_23 _qv_24) (cons _qv_23 _qv_25))))
USE ASSUMPTION FAILED

  proven by induction: ((nat-to-int (count zero (insort _v_12 _v_13)))=(nat-to-int (count zero _v_13)))
}
Inductive step:  ((count (succ _t_14) (insort _v_12 _v_13))=(count (succ _t_14) _v_13))
{
  {
    ====================
    | Assumptions [0]: ((nat-to-int zero)=0)
    | Assumptions [1]: ((sort nil)=nil)
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [3]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [4]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((less (succ _qv_7) (succ _qv_8))=(less _qv_7 _qv_8)))
    | Assumptions [6]: (forall ((Nat) (Nat)) ((less _qv_9 _qv_10)=((nat-to-int _qv_9)<(nat-to-int _qv_10))))
    | Assumptions [7]: (forall ((Nat)) ((count _qv_11 nil)=zero))
    | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((count _qv_12 (cons _qv_13 _qv_14))=ite(_qv_12=_qv_13, (succ (count _qv_12 _qv_14)), (count _qv_12 _qv_14))))
    | Assumptions [9]: (forall ((Nat)) ((insort _qv_15 nil)=(cons _qv_15 nil)))
    | Assumptions [10]: (forall ((Nat) (Nat) (Lst)) ((insort _qv_16 (cons _qv_17 _qv_18))=ite((less _qv_16 _qv_17), (cons _qv_16 (cons _qv_17 _qv_18)), (cons _qv_17 (insort _qv_16 _qv_18)))))
    | Assumptions [11]: (forall ((Nat) (Lst)) ((sort (cons _qv_19 _qv_20))=(insort _qv_19 (sort _qv_20))))
    | Assumptions [12]: (forall ((Nat)) (!(less _qv_5 zero)))
    | Assumptions [13]: (forall ((Nat)) (less zero (succ _qv_6)))
    | Assumptions [14]: (forall ((Nat) (Lst)) ((_t_14!=y)->((count _t_14 (insort y z))=(count _t_14 z))))
    | Assumptions [15]: ((succ _t_14)!=_v_12)
    ====================
  }
  rewritten [3]: ((nat-to-int (count (succ _t_14) (insort _v_12 _v_13)))=(nat-to-int (count (succ _t_14) _v_13)))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_16))=_qv_16))
	(forall ((Nat)) (0<=(nat-to-int _qv_17)))
	(forall ((Nat) (Nat)) ((less _qv_18 _qv_19)=(less _qv_19 _qv_18)))
	(forall ((Lst)) ((sort (sort _qv_20))=_qv_20))
	(forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_16))=_qv_16))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_18 _qv_19)=(less _qv_19 _qv_18)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_20))=_qv_20))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_16))=_qv_16))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_18 _qv_19)=(less _qv_19 _qv_18)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_20))=_qv_20))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_29 (insort _v_28 _v_30)))=(nat-to-int (count _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_16))=_qv_16))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_18 _qv_19)=(less _qv_19 _qv_18)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_20))=_qv_20))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_16))=_qv_16))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_18 _qv_19)=(less _qv_19 _qv_18)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_20))=_qv_20))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_32 (insort zero _v_33)))=(nat-to-int (count _v_32 _v_33)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_16))=_qv_16))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_18 _qv_19)=(less _qv_19 _qv_18)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_20))=_qv_20))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_16))=_qv_16))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_18 _qv_19)=(less _qv_19 _qv_18)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_20))=_qv_20))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count zero (insort _v_35 _v_36)))=(nat-to-int (count zero _v_36)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
	(forall ((Nat)) (0<=(nat-to-int _qv_41)))
	(forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
	(forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
	(forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_56 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_61 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_66 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_40))=_qv_40))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_41)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_42 _qv_43)=(less _qv_43 _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Lst)) ((sort (sort _qv_44))=_qv_44))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_45))=(nat-to-int _qv_45)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_46 (cons _qv_47 _qv_48))=(cons (insort _qv_46 _qv_47) (insort _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (count _v_71 nil))=-1)
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_49 (insort _qv_50 _qv_51))=(insort (cons _qv_49 _qv_50) (cons _qv_49 _qv_51))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((na