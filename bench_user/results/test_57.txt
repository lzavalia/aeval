
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
	(forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
	(forall ((Nat)) (0<=(nat-to-int _qv_11)))
	(forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
	(forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
	(forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))

Simplified goal: (forall ((Lst) (Lst)) ((rotate (len x) (append x y))=(append y x)))


Base case:       ((rotate (len nil) (append nil _v_16))=(append _v_16 nil))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat) (Lst)) ((len (cons _qv_1 _qv_2))=(succ (len _qv_2))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_3)=_qv_3))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_4 _qv_5) _qv_6)=(cons _qv_4 (append _qv_5 _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((rotate (succ _qv_8) nil)=nil))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((rotate (succ _qv_9) (cons _qv_10 _qv_11))=(rotate _qv_9 (append _qv_11 (cons _qv_10 nil)))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_13) _qv_14)=(succ (plus _qv_13 _qv_14))))
    | Assumptions [6]: (forall ((Nat)) ((nat-to-int _qv_15)>=0))
    | Assumptions [7]: (forall ((Nat) (Nat)) (((nat-to-int _qv_16)=(nat-to-int _qv_17))->(_qv_16=_qv_17)))
    | Assumptions [8]: (forall ((Nat)) ((nat-to-int (succ _qv_18))=(1+(nat-to-int _qv_18))))
    | Assumptions [9]: (forall ((Nat) (Nat)) ((nat-to-int (plus _qv_19 _qv_20))=((nat-to-int _qv_19)+(nat-to-int _qv_20))))
    | Assumptions [10]: (forall ((Lst)) ((rotate (len nil) _qv_7)=_qv_7))
    | Assumptions [11]: (forall ((Nat)) ((plus (len nil) _qv_12)=_qv_12))
    | Assumptions [12]: ((nat-to-int (len nil))=0)
    ====================
  }
  rewritten [1]: ((rotate (len nil) _v_16)=(append _v_16 nil))
  rewritten [10]: (_v_16=(append _v_16 nil))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_17))=_qv_17))
	(forall ((Lst) (Lst)) ((append _qv_18 _qv_19)=(append _qv_19 _qv_18)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_20 _qv_21) _qv_22)=(append _qv_20 (append _qv_21 _qv_22))))
	(forall ((Nat) (Nat)) ((plus _qv_23 _qv_24)=(plus _qv_24 _qv_23)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_25 _qv_26) _qv_27)=(plus _qv_25 (plus _qv_26 _qv_27))))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat)) ((nat-to-int (succ _qv_29))=(nat-to-int _qv_29)))
	(forall ((Lst)) ((nat-to-int (len _qv_30))=(nat-to-int _qv_30)))
	(forall ((Nat) (Nat)) ((succ (plus _qv_31 _qv_32))=(plus (succ _qv_31) (succ _qv_32))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_31 _qv_32))=(plus (succ _qv_32) (succ _qv_31))))

  proven by induction: (_v_16=(append _v_16 nil))
  rewriting done
}
Inductive step:  ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat) (Lst)) ((len (cons _qv_1 _qv_2))=(succ (len _qv_2))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_3)=_qv_3))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_4 _qv_5) _qv_6)=(cons _qv_4 (append _qv_5 _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((rotate (succ _qv_8) nil)=nil))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((rotate (succ _qv_9) (cons _qv_10 _qv_11))=(rotate _qv_9 (append _qv_11 (cons _qv_10 nil)))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_13) _qv_14)=(succ (plus _qv_13 _qv_14))))
    | Assumptions [6]: (forall ((Nat)) ((nat-to-int _qv_15)>=0))
    | Assumptions [7]: (forall ((Nat) (Nat)) (((nat-to-int _qv_16)=(nat-to-int _qv_17))->(_qv_16=_qv_17)))
    | Assumptions [8]: (forall ((Nat)) ((nat-to-int (succ _qv_18))=(1+(nat-to-int _qv_18))))
    | Assumptions [9]: (forall ((Nat) (Nat)) ((nat-to-int (plus _qv_19 _qv_20))=((nat-to-int _qv_19)+(nat-to-int _qv_20))))
    | Assumptions [10]: (forall ((Lst)) ((rotate (len _t_18) (append _t_18 y))=(append y _t_18)))
    | Assumptions [11]: (forall ((Lst)) ((append y _t_18)=(rotate (len _t_18) (append _t_18 y))))
    | Assumptions [12]: (forall ((Lst)) ((rotate (len nil) _qv_7)=_qv_7))
    | Assumptions [13]: (forall ((Nat)) ((plus (len nil) _qv_12)=_qv_12))
    | Assumptions [14]: ((nat-to-int (len nil))=0)
    ====================
  }
  rewritten [0]: ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [2]: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [2]: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [2]: ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [0]: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [0]: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [0]: ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [2]: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [2]: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [2]: ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [0]: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [0]: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
  rewritten [4]: ((rotate (len _t_18) (append (append _t_18 _v_16) (cons _t_17 nil)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_17 _t_18)) (cons _t_17 (append _t_18 _v_16)))=(append _v_16 (cons _t_17 _t_18)))
CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_17 _t_18)) (append (cons _t_17 _t_18) _v_16))=(append _v_16 (cons _t_17 _t_18)))

Base case:       ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat) (Lst)) ((len (cons _qv_1 _qv_2))=(succ (len _qv_2))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_3)=_qv_3))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_4 _qv_5) _qv_6)=(cons _qv_4 (append _qv_5 _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((rotate (succ _qv_8) nil)=nil))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((rotate (succ _qv_9) (cons _qv_10 _qv_11))=(rotate _qv_9 (append _qv_11 (cons _qv_10 nil)))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_13) _qv_14)=(succ (plus _qv_13 _qv_14))))
    | Assumptions [6]: (forall ((Nat)) ((nat-to-int _qv_15)>=0))
    | Assumptions [7]: (forall ((Nat) (Nat)) (((nat-to-int _qv_16)=(nat-to-int _qv_17))->(_qv_16=_qv_17)))
    | Assumptions [8]: (forall ((Nat)) ((nat-to-int (succ _qv_18))=(1+(nat-to-int _qv_18))))
    | Assumptions [9]: (forall ((Nat) (Nat)) ((nat-to-int (plus _qv_19 _qv_20))=((nat-to-int _qv_19)+(nat-to-int _qv_20))))
    | Assumptions [10]: (forall ((Lst)) ((rotate (len _t_18) (append _t_18 y))=(append y _t_18)))
    | Assumptions [11]: (forall ((Lst)) ((append y _t_18)=(rotate (len _t_18) (append _t_18 y))))
    | Assumptions [12]: (forall ((Lst)) ((rotate (len nil) _qv_7)=_qv_7))
    | Assumptions [13]: (forall ((Nat)) ((plus (len nil) _qv_12)=_qv_12))
    | Assumptions [14]: ((nat-to-int (len nil))=0)
    ====================
  }
  rewritten [1]: ((rotate (len _v_23) (append _v_23 nil))=_v_23)

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
	(forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
	(forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
	(forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
	(forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
  rewritten [1]: ((rotate (len _v_23) (append _v_23 nil))=_v_23)

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
	(forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
	(forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
	(forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
	(forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (cons _t_40 (append _t_41 nil)))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_24))=_qv_24))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_30 _qv_31)=(plus _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_32 _qv_33) _qv_34)=(plus _qv_32 (plus _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_37))=(nat-to-int _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_40 _t_41)) (append (cons _t_40 _t_41) nil))=(cons _t_40 _t_41))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_38 _qv_39))=(plus (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _v_23) (append _v_23 nil))=(append nil _v_23))
}
Unknown
sat
