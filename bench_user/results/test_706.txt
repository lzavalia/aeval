
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst)) (0<=(len _qv_0)))
	(forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
	(forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
	(forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))

Simplified goal: (forall ((Lst) (Lst)) ((len (append x y))=(len (append y x))))


Base case:       ((len (append nil _v_11))=(len (append _v_11 nil)))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=0)
    | Assumptions [1]: (forall (INT (Lst)) ((len (cons _qv_1 _qv_2))=(1+(len _qv_2))))
    | Assumptions [2]: (forall ((Lst)) ((len _qv_3)>=0))
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_4)=_qv_4))
    | Assumptions [4]: (forall (INT (Lst) (Lst)) ((append (cons _qv_5 _qv_6) _qv_7)=(cons _qv_5 (append _qv_6 _qv_7))))
    | Assumptions [5]: (forall ((Lst)) ((rotate 0 _qv_8)=_qv_8))
    | Assumptions [6]: (forall (INT) ((_qv_9>=0)->((rotate 1+_qv_9 nil)=nil)))
    | Assumptions [7]: (forall (INT INT (Lst)) ((_qv_10>=0)->((rotate 1+_qv_10 (cons _qv_11 _qv_12))=(rotate _qv_10 (append _qv_12 (cons _qv_11 nil))))))
    | Assumptions [8]: (forall (INT) ((_qv_13>=0)->((plus 0 _qv_13)=_qv_13)))
    | Assumptions [9]: (forall (INT INT) (((_qv_14>=0)&&(_qv_15>=0))->((plus 1+_qv_14 _qv_15)=(1+(plus _qv_14 _qv_15)))))
    | Assumptions [10]: (forall (INT INT) (((_qv_16>=0)&&(_qv_17>=0))->((plus _qv_16 _qv_17)=(_qv_16+_qv_17))))
    ====================
  }
  rewritten [0]: ((len (append nil _v_11))=(len (append _v_11 nil)))
  rewritten [3]: ((len _v_11)=(len (append _v_11 nil)))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst)) (0<=(len _qv_12)))
	(forall ((Lst) (Lst)) ((append _qv_13 _qv_14)=(append _qv_14 _qv_13)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_15 _qv_16) _qv_17)=(append _qv_15 (append _qv_16 _qv_17))))
	(forall (INT INT) ((plus _qv_18 _qv_19)=(plus _qv_19 _qv_18)))
	(forall (INT INT INT) ((plus (plus _qv_20 _qv_21) _qv_22)=(plus _qv_20 (plus _qv_21 _qv_22))))


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst)) (0<=(len _qv_25)))
	(forall ((Lst) (Lst)) ((append _qv_26 _qv_27)=(append _qv_27 _qv_26)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_28 _qv_29) _qv_30)=(append _qv_28 (append _qv_29 _qv_30))))
	(forall (INT INT) ((plus _qv_31 _qv_32)=(plus _qv_32 _qv_31)))
	(forall (INT INT INT) ((plus (plus _qv_33 _qv_34) _qv_35)=(plus _qv_33 (plus _qv_34 _qv_35))))

  proven by induction: ((len _v_11)=(len (append _v_11 nil)))
  rewriting done
}
Inductive step:  ((len (append (cons _t_12 _t_13) _v_11))=(len (append _v_11 (cons _t_12 _t_13))))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=0)
    | Assumptions [1]: (forall (INT (Lst)) ((len (cons _qv_1 _qv_2))=(1+(len _qv_2))))
    | Assumptions [2]: (forall ((Lst)) ((len _qv_3)>=0))
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_4)=_qv_4))
    | Assumptions [4]: (forall (INT (Lst) (Lst)) ((append (cons _qv_5 _qv_6) _qv_7)=(cons _qv_5 (append _qv_6 _qv_7))))
    | Assumptions [5]: (forall ((Lst)) ((rotate 0 _qv_8)=_qv_8))
    | Assumptions [6]: (forall (INT) ((_qv_9>=0)->((rotate 1+_qv_9 nil)=nil)))
    | Assumptions [7]: (forall (INT INT (Lst)) ((_qv_10>=0)->((rotate 1+_qv_10 (cons _qv_11 _qv_12))=(rotate _qv_10 (append _qv_12 (cons _qv_11 nil))))))
    | Assumptions [8]: (forall (INT) ((_qv_13>=0)->((plus 0 _qv_13)=_qv_13)))
    | Assumptions [9]: (forall (INT INT) (((_qv_14>=0)&&(_qv_15>=0))->((plus 1+_qv_14 _qv_15)=(1+(plus _qv_14 _qv_15)))))
    | Assumptions [10]: (forall (INT INT) (((_qv_16>=0)&&(_qv_17>=0))->((plus _qv_16 _qv_17)=(_qv_16+_qv_17))))
    | Assumptions [11]: (forall ((Lst)) ((len (append _t_13 y))=(len (append y _t_13))))
    | Assumptions [12]: (forall ((Lst)) ((len (append y _t_13))=(len (append _t_13 y))))
    ====================
  }
  rewritten [0]: ((len (append (cons _t_12 _t_13) _v_11))=(len (append _v_11 (cons _t_12 _t_13))))
  rewritten [4]: ((len (cons _t_12 (append _t_13 _v_11)))=(len (append _v_11 (cons _t_12 _t_13))))
  rewritten [1]: ((1+(len (append _t_13 _v_11)))=(len (append _v_11 (cons _t_12 _t_13))))
  rewritten [0]: ((len (append _t_13 _v_11))=(-1+(len (append _v_11 (cons _t_12 _t_13)))))
  rewritten [11]: ((len (append _v_11 _t_13))=((len (append _v_11 (cons _t_12 _t_13)))+-1))
  rewritten [0]: ((len (append _v_11 _t_13))=(-1+(len (append _v_11 (cons _t_12 _t_13)))))
  sequence of rewrites only grows

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst)) (0<=(len _qv_14)))
	(forall ((Lst) (Lst)) ((append _qv_15 _qv_16)=(append _qv_16 _qv_15)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_17 _qv_18) _qv_19)=(append _qv_17 (append _qv_18 _qv_19))))
	(forall (INT INT) ((plus _qv_20 _qv_21)=(plus _qv_21 _qv_20)))
	(forall (INT INT INT) ((plus (plus _qv_22 _qv_23) _qv_24)=(plus _qv_22 (plus _qv_23 _qv_24))))


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst)) (0<=(len _qv_29)))
	(forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
	(forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
	(forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (cons _t_43 (append _t_44 _v_40)))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-1))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst)) (0<=(len _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_30 _qv_31)=(append _qv_31 _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_32 _qv_33) _qv_34)=(append _qv_32 (append _qv_33 _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT) ((plus _qv_35 _qv_36)=(plus _qv_36 _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append _t_44 _v_40))=((len (append (cons _t_43 _t_44) (cons _v_42 _v_40)))+-2))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_37 _qv_38) _qv_39)=(plus _qv_37 (plus _qv_38 _qv_39))))
USE ASSUMPTION FAILED

  proven by induction: ((len (append _v_11 _t_13))=(-1+(len (append _v_11 (cons _t_12 _t_13)))))
  rewriting done
  rewriting done
  rewriting done
  rewriting done
  rewriting done
}

Proved
unsat
