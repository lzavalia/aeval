
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
	(forall ((Lst)) ((rev (rev _qv_7))=_qv_7))
	(forall ((Lst) (Lst)) ((qreva _qv_8 _qv_9)=(qreva _qv_9 _qv_8)))
	(forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_10 _qv_11) _qv_12)=(qreva _qv_10 (qreva _qv_11 _qv_12))))
	(forall ((Nat)) ((nat-to-int (succ _qv_13))=(nat-to-int _qv_13)))
	(forall ((Lst) (Lst) (Lst)) ((qreva _qv_14 (append _qv_15 _qv_16))=(append (qreva _qv_14 _qv_15) (qreva _qv_14 _qv_16))))
	(forall ((Lst) (Lst) (Lst)) ((append _qv_17 (qreva _qv_18 _qv_19))=(qreva (append _qv_17 _qv_18) (append _qv_17 _qv_19))))
	(forall ((Lst) (Lst)) ((rev (append _qv_20 _qv_21))=(append (rev _qv_20) (rev _qv_21))))
	(forall ((Lst) (Lst)) ((rev (append _qv_20 _qv_21))=(append (rev _qv_21) (rev _qv_20))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_22 _qv_23))=(qreva (rev _qv_22) (rev _qv_23))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_22 _qv_23))=(qreva (rev _qv_23) (rev _qv_22))))

Simplified goal: (forall ((Tree) (Lst)) ((append (revflat x) y)=(qrevaflat x y)))


Base case:       ((append (revflat leaf) _v_24)=(qrevaflat leaf _v_24))
{
  proven trivially
}
Inductive step:  ((append (revflat (node _t_25 _t_26 _t_27)) _v_24)=(qrevaflat (node _t_25 _t_26 _t_27) _v_24))
{
  {
    ====================
    | Assumptions [0]: ((nat-to-int zero)=0)
    | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [4]: (forall ((Lst)) ((qrevaflat leaf _qv_5)=_qv_5))
    | Assumptions [5]: (forall ((Nat) (Tree) (Tree) (Lst)) ((qrevaflat (node _qv_6 _qv_7 _qv_8) _qv_9)=(qrevaflat _qv_7 (cons _qv_6 (qrevaflat _qv_8 _qv_9)))))
    | Assumptions [6]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_11 _qv_12) _qv_13)=(cons _qv_11 (append _qv_12 _qv_13))))
    | Assumptions [7]: (forall ((Lst) (Lst) (Nat)) ((qreva (cons _qv_19 _qv_17) _qv_18)=(qreva _qv_17 (cons _qv_19 _qv_18))))
    | Assumptions [8]: (forall ((Nat) (Tree) (Tree)) ((revflat (node _qv_20 _qv_21 _qv_22))=(append (revflat _qv_21) (cons _qv_20 (revflat _qv_22)))))
    | Assumptions [9]: (forall ((Lst)) ((append (revflat _t_26) y)=(qrevaflat _t_26 y)))
    | Assumptions [10]: (forall ((Lst)) ((append (revflat _t_27) y)=(qrevaflat _t_27 y)))
    | Assumptions [11]: (forall ((Lst)) ((qrevaflat _t_26 y)=(append (revflat _t_26) y)))
    | Assumptions [12]: (forall ((Lst)) ((qrevaflat _t_27 y)=(append (revflat _t_27) y)))
    | Assumptions [13]: (forall ((Lst)) ((append (revflat leaf) _qv_10)=_qv_10))
    | Assumptions [14]: ((rev (revflat leaf))=(revflat leaf))
    | Assumptions [15]: (forall ((Nat) (Lst)) ((rev (cons _qv_14 _qv_15))=(append (rev _qv_15) (cons _qv_14 (revflat leaf)))))
    | Assumptions [16]: (forall ((Lst)) ((qreva (revflat leaf) _qv_16)=_qv_16))
    ====================
  }
  rewritten [5]: ((append (revflat (node _t_25 _t_26 _t_27)) _v_24)=(qrevaflat _t_26 (cons _t_25 (qrevaflat _t_27 _v_24))))
  rewritten [8]: ((append (append (revflat _t_26) (cons _t_25 (revflat _t_27))) _v_24)=(qrevaflat _t_26 (cons _t_25 (qrevaflat _t_27 _v_24))))
  rewritten [9]: ((append (qrevaflat _t_26 (cons _t_25 (revflat _t_27))) _v_24)=(qrevaflat _t_26 (cons _t_25 (qrevaflat _t_27 _v_24))))
  rewritten [11]: ((append (qrevaflat _t_26 (cons _t_25 (revflat _t_27))) _v_24)=(append (revflat _t_26) (cons _t_25 (qrevaflat _t_27 _v_24))))
  rewritten [11]: ((append (append (revflat _t_26) (cons _t_25 (revflat _t_27))) _v_24)=(append (revflat _t_26) (cons _t_25 (qrevaflat _t_27 _v_24))))
  rewritten [12]: ((append (append (revflat _t_26) (cons _t_25 (revflat _t_27))) _v_24)=(append (revflat _t_26) (cons _t_25 (append (revflat _t_27) _v_24))))
  sequence of rewrites only grows

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_29))=_qv_29))
	(forall ((Nat)) (0<=(nat-to-int _qv_30)))
	(forall ((Lst) (Lst)) ((append _qv_31 _qv_32)=(append _qv_32 _qv_31)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_33 _qv_34) _qv_35)=(append _qv_33 (append _qv_34 _qv_35))))
	(forall ((Lst)) ((rev (rev _qv_36))=_qv_36))
	(forall ((Lst) (Lst)) ((qreva _qv_37 _qv_38)=(qreva _qv_38 _qv_37)))
	(forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_39 _qv_40) _qv_41)=(qreva _qv_39 (qreva _qv_40 _qv_41))))
	(forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
	(forall ((Lst) (Lst) (Lst)) ((qreva _qv_43 (append _qv_44 _qv_45))=(append (qreva _qv_43 _qv_44) (qreva _qv_43 _qv_45))))
	(forall ((Lst) (Lst) (Lst)) ((append _qv_46 (qreva _qv_47 _qv_48))=(qreva (append _qv_46 _qv_47) (append _qv_46 _qv_48))))
	(forall ((Lst) (Lst)) ((rev (append _qv_49 _qv_50))=(append (rev _qv_49) (rev _qv_50))))
	(forall ((Lst) (Lst)) ((rev (append _qv_49 _qv_50))=(append (rev _qv_50) (rev _qv_49))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_51 _qv_52))=(qreva (rev _qv_51) (rev _qv_52))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_51 _qv_52))=(qreva (rev _qv_52) (rev _qv_51))))


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_62))=_qv_62))
	(forall ((Nat)) (0<=(nat-to-int _qv_63)))
	(forall ((Lst) (Lst)) ((append _qv_64 _qv_65)=(append _qv_65 _qv_64)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_66 _qv_67) _qv_68)=(append _qv_66 (append _qv_67 _qv_68))))
	(forall ((Lst)) ((rev (rev _qv_69))=_qv_69))
	(forall ((Lst) (Lst)) ((qreva _qv_70 _qv_71)=(qreva _qv_71 _qv_70)))
	(forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_72 _qv_73) _qv_74)=(qreva _qv_72 (qreva _qv_73 _qv_74))))
	(forall ((Nat)) ((nat-to-int (succ _qv_75))=(nat-to-int _qv_75)))
	(forall ((Lst) (Lst) (Lst)) ((qreva _qv_76 (append _qv_77 _qv_78))=(append (qreva _qv_76 _qv_77) (qreva _qv_76 _qv_78))))
	(forall ((Lst) (Lst) (Lst)) ((append _qv_79 (qreva _qv_80 _qv_81))=(qreva (append _qv_79 _qv_80) (append _qv_79 _qv_81))))
	(forall ((Lst) (Lst)) ((rev (append _qv_82 _qv_83))=(append (rev _qv_82) (rev _qv_83))))
	(forall ((Lst) (Lst)) ((rev (append _qv_82 _qv_83))=(append (rev _qv_83) (rev _qv_82))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_84 _qv_85))=(qreva (rev _qv_84) (rev _qv_85))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_84 _qv_85))=(qreva (rev _qv_85) (rev _qv_84))))

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_29))=_qv_29))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_31 _qv_32)=(append _qv_32 _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_33 _qv_34) _qv_35)=(append _qv_33 (append _qv_34 _qv_35))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_36))=_qv_36))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((qreva _qv_37 _qv_38)=(qreva _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_39 _qv_40) _qv_41)=(qreva _qv_39 (qreva _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((qreva _qv_43 (append _qv_44 _qv_45))=(append (qreva _qv_43 _qv_44) (qreva _qv_43 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append _qv_46 (qreva _qv_47 _qv_48))=(qreva (append _qv_46 _qv_47) (append _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_49 _qv_50))=(append (rev _qv_49) (rev _qv_50))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_49 _qv_50))=(append (rev _qv_50) (rev _qv_49))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (qreva _qv_51 _qv_52))=(qreva (rev _qv_51) (rev _qv_52))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (qreva _qv_51 _qv_52))=(qreva (rev _qv_52) (rev _qv_51))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_62))=_qv_62))
	(forall ((Nat)) (0<=(nat-to-int _qv_63)))
	(forall ((Lst) (Lst)) ((append _qv_64 _qv_65)=(append _qv_65 _qv_64)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_66 _qv_67) _qv_68)=(append _qv_66 (append _qv_67 _qv_68))))
	(forall ((Lst)) ((rev (rev _qv_69))=_qv_69))
	(forall ((Lst) (Lst)) ((qreva _qv_70 _qv_71)=(qreva _qv_71 _qv_70)))
	(forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_72 _qv_73) _qv_74)=(qreva _qv_72 (qreva _qv_73 _qv_74))))
	(forall ((Nat)) ((nat-to-int (succ _qv_75))=(nat-to-int _qv_75)))
	(forall ((Lst) (Lst) (Lst)) ((qreva _qv_76 (append _qv_77 _qv_78))=(append (qreva _qv_76 _qv_77) (qreva _qv_76 _qv_78))))
	(forall ((Lst) (Lst) (Lst)) ((append _qv_79 (qreva _qv_80 _qv_81))=(qreva (append _qv_79 _qv_80) (append _qv_79 _qv_81))))
	(forall ((Lst) (Lst)) ((rev (append _qv_82 _qv_83))=(append (rev _qv_82) (rev _qv_83))))
	(forall ((Lst) (Lst)) ((rev (append _qv_82 _qv_83))=(append (rev _qv_83) (rev _qv_82))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_84 _qv_85))=(qreva (rev _qv_84) (rev _qv_85))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_84 _qv_85))=(qreva (rev _qv_85) (rev _qv_84))))

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_29))=_qv_29))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_31 _qv_32)=(append _qv_32 _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_33 _qv_34) _qv_35)=(append _qv_33 (append _qv_34 _qv_35))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_36))=_qv_36))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((qreva _qv_37 _qv_38)=(qreva _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_39 _qv_40) _qv_41)=(qreva _qv_39 (qreva _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((qreva _qv_43 (append _qv_44 _qv_45))=(append (qreva _qv_43 _qv_44) (qreva _qv_43 _qv_45))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append _qv_46 (qreva _qv_47 _qv_48))=(qreva (append _qv_46 _qv_47) (append _qv_46 _qv_48))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_49 _qv_50))=(append (rev _qv_49) (rev _qv_50))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_49 _qv_50))=(append (rev _qv_50) (rev _qv_49))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (qreva _qv_51 _qv_52))=(qreva (rev _qv_51) (rev _qv_52))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((append (append _v_59 (cons _v_60 (revflat leaf))) _v_61)=(append _v_59 (cons _v_60 (append (revflat leaf) _v_61))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (qreva _qv_51 _qv_52))=(qreva (rev _qv_52) (rev _qv_51))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
	(forall ((Nat)) (0<=(nat-to-int _qv_31)))
	(forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
	(forall ((Lst)) ((rev (rev _qv_37))=_qv_37))
	(forall ((Lst) (Lst)) ((qreva _qv_38 _qv_39)=(qreva _qv_39 _qv_38)))
	(forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_40 _qv_41) _qv_42)=(qreva _qv_40 (qreva _qv_41 _qv_42))))
	(forall ((Nat)) ((nat-to-int (succ _qv_43))=(nat-to-int _qv_43)))
	(forall ((Lst) (Lst) (Lst)) ((qreva _qv_44 (append _qv_45 _qv_46))=(append (qreva _qv_44 _qv_45) (qreva _qv_44 _qv_46))))
	(forall ((Lst) (Lst) (Lst)) ((append _qv_47 (qreva _qv_48 _qv_49))=(qreva (append _qv_47 _qv_48) (append _qv_47 _qv_49))))
	(forall ((Lst) (Lst)) ((rev (append _qv_50 _qv_51))=(append (rev _qv_50) (rev _qv_51))))
	(forall ((Lst) (Lst)) ((rev (append _qv_50 _qv_51))=(append (rev _qv_51) (rev _qv_50))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_52 _qv_53))=(qreva (rev _qv_52) (rev _qv_53))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_52 _qv_53))=(qreva (rev _qv_53) (rev _qv_52))))

  proven by induction: ((append (append (revflat _t_26) (cons _t_25 _w_29)) _v_24)=(append (revflat _t_26) (cons _t_25 (append _w_29 _v_24))))
  rewriting done
  rewriting done
  rewriting done
  rewriting done
  rewriting done
}

Proved
unsat
