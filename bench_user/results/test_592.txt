
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))

Simplified goal: (forall ((Lst) (Lst) (Nat) (Nat)) ((even (len (append w z)))=(even (len (append w (cons x (cons y z)))))))


Base case:       ((even (len (append nil _v_6)))=(even (len (append nil (cons _v_7 (cons _v_8 _v_6))))))
{
  proven trivially
}
Inductive step:  ((even (len (append (cons _t_9 _t_10) _v_6)))=(even (len (append (cons _t_9 _t_10) (cons _v_7 (cons _v_8 _v_6))))))
{
  proven trivially
}

Proved
unsat
