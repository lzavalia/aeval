
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
	(forall ((Nat)) ((half (half _qv_6))=_qv_6))
	(forall ((Nat) (Nat)) ((succ (plus _qv_7 _qv_8))=(plus (succ _qv_7) (succ _qv_8))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_7 _qv_8))=(plus (succ _qv_8) (succ _qv_7))))
	(forall ((Nat) (Nat)) ((half (plus _qv_9 _qv_10))=(plus (half _qv_9) (half _qv_10))))
	(forall ((Nat) (Nat)) ((half (plus _qv_9 _qv_10))=(plus (half _qv_10) (half _qv_9))))

Simplified goal: (forall ((Nat)) ((half (plus x x))=x))


Base case:       ((half (plus zero zero))=zero)
{
  proven trivially
}
Inductive step:  ((half (plus (succ _t_11) (succ _t_11)))=(succ _t_11))
{
  {
    ====================
    | Assumptions [0]: ((half zero)=zero)
    | Assumptions [1]: ((half (succ zero))=zero)
    | Assumptions [2]: (forall ((Nat)) ((plus zero _qv_1)=_qv_1))
    | Assumptions [3]: (forall ((Nat) (Nat)) ((plus (succ _qv_2) _qv_3)=(succ (plus _qv_2 _qv_3))))
    | Assumptions [4]: (forall ((Nat)) ((half (succ (succ _qv_4)))=(succ (half _qv_4))))
    | Assumptions [5]: ((half (plus _t_11 _t_11))=_t_11)
    | Assumptions [6]: (_t_11=(half (plus _t_11 _t_11)))
    | Assumptions [7]: ((half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11))))=(half (plus _t_11 _t_11)))
    | Assumptions [8]: ((half (plus (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))) (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11))))))=(half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))))
    | Assumptions [9]: ((half (plus (half (plus (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))) (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))))) (half (plus (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))) (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11))))))))=(half (plus (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))) (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))))))
    ====================
  }
  rewritten [3]: ((half (succ (plus _t_11 (succ _t_11))))=(succ _t_11))
  rewritten [6]: ((half (succ (plus (half (plus _t_11 _t_11)) (succ (half (plus _t_11 _t_11))))))=(succ (half (plus _t_11 _t_11))))
  rewritten [6]: ((half (succ (plus (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))) (succ (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11))))))))=(succ (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11))))))
  rewritten [6]: ((half (succ (plus (half (plus (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))) (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))))) (succ (half (plus (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))) (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11))))))))))=(succ (half (plus (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11)))) (half (plus (half (plus _t_11 _t_11)) (half (plus _t_11 _t_11))))))))
  sequence of rewrites only grows

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_13))=_qv_13))
	(forall ((Nat) (Nat)) ((plus _qv_14 _qv_15)=(plus _qv_15 _qv_14)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_16 _qv_17) _qv_18)=(plus _qv_16 (plus _qv_17 _qv_18))))
	(forall ((Nat)) ((half (half _qv_19))=_qv_19))
	(forall ((Nat) (Nat)) ((succ (plus _qv_20 _qv_21))=(plus (succ _qv_20) (succ _qv_21))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_20 _qv_21))=(plus (succ _qv_21) (succ _qv_20))))
	(forall ((Nat) (Nat)) ((half (plus _qv_22 _qv_23))=(plus (half _qv_22) (half _qv_23))))
	(forall ((Nat) (Nat)) ((half (plus _qv_22 _qv_23))=(plus (half _qv_23) (half _qv_22))))

