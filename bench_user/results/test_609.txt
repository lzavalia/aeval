
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
	(forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
	(forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
	(forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))

Simplified goal: (forall ((Lst)) ((len (rev x))=(len x)))


Base case:       ((len (rev nil))=(len nil))
{
  proven trivially
}
Inductive step:  ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=zero)
    | Assumptions [1]: ((rev nil)=nil)
    | Assumptions [2]: (forall ((Lst)) ((append nil _qv_1)=_qv_1))
    | Assumptions [3]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_2 _qv_3) _qv_4)=(cons _qv_2 (append _qv_3 _qv_4))))
    | Assumptions [4]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((rev (cons _qv_7 _qv_8))=(append (rev _qv_8) (cons _qv_7 nil))))
    | Assumptions [6]: ((len (rev _t_9))=(len _t_9))
    | Assumptions [7]: ((len _t_9)=(len (rev _t_9)))
    ====================
  }
  rewritten [4]: ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
  rewritten [7]: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
  rewritten [7]: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
  rewritten [4]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
  rewritten [4]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
  rewritten [4]: ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
  rewritten [7]: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
  rewritten [7]: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
  rewritten [6]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
  rewritten [5]: ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
  rewritten [4]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
  rewritten [4]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
  rewritten [7]: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len (rev _t_9))))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(succ (len _t_9)))
CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (append (rev _t_9) (cons _t_8 nil)))=(len (cons _t_8 _t_9)))
CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rev (cons _t_8 _t_9)))=(len (cons _t_8 _t_9)))
Unknown
sat
