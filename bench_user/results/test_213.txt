
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
	(forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))

Simplified goal: (forall ((Nat) (Lst) (Lst)) (((mem x y)||(mem x z))->(mem x (append y z))))


Base case:       (mem zero (append _v_8 _v_9))
{
  {
    ====================
    | Assumptions [0]: ((nat-to-int zero)=0)
    | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [4]: (forall ((Lst)) ((append nil _qv_5)=_qv_5))
    | Assumptions [5]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_6 _qv_7) _qv_8)=(cons _qv_6 (append _qv_7 _qv_8))))
    | Assumptions [6]: (forall ((Nat) (Nat) (Lst)) ((mem _qv_10 (cons _qv_11 _qv_12))=((_qv_10=_qv_11)||(mem _qv_10 _qv_12))))
    | Assumptions [7]: ((mem zero _v_8)||(mem zero _v_9))
    | Assumptions [8]: (forall ((Nat)) (!(mem _qv_9 nil)))
    ====================
  }
  split for (part 1/2): (mem zero _v_8)
  {
    {
      ====================
      | Assumptions [0]: ((nat-to-int zero)=0)
      | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [4]: (forall ((Lst)) ((append nil _qv_5)=_qv_5))
      | Assumptions [5]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_6 _qv_7) _qv_8)=(cons _qv_6 (append _qv_7 _qv_8))))
      | Assumptions [6]: (forall ((Nat) (Nat) (Lst)) ((mem _qv_10 (cons _qv_11 _qv_12))=((_qv_10=_qv_11)||(mem _qv_10 _qv_12))))
      | Assumptions [7]: (mem zero _v_8)
      | Assumptions [8]: (forall ((Nat)) (!(mem _qv_9 nil)))
      | Assumptions [9]: (!(mem zero nil))
      ====================
    }
  }
  unable to succeed
}

Base case:       (mem _v_10 (append nil _v_11))
{
  proven trivially
}
Inductive step:  (mem _v_10 (append (cons _t_12 _t_13) _v_11))
{
  proven trivially
}

Proved
unsat
