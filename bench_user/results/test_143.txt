
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
	(forall ((Lst)) ((filter (filter _qv_4))=_qv_4))
	(forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
	(forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))

Simplified goal: (forall ((Lst)) (((len (filter xs))=(len xs))||(less (len (filter xs)) (len xs))))


Base case:       (((len (filter nil))=(len nil))||(less (len (filter nil)) (len nil)))
{
  proven trivially
}
Inductive step:  (((len (filter (cons _t_7 _t_8)))=(len (cons _t_7 _t_8)))||(less (len (filter (cons _t_7 _t_8))) (len (cons _t_7 _t_8))))
{
  proven trivially
}

Proved
unsat
