
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
	(forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
	(forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
	(forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
	(forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
	(forall ((Nat) (Nat) (Nat)) ((mult _qv_13 (plus _qv_14 _qv_15))=(plus (mult _qv_13 _qv_14) (mult _qv_13 _qv_15))))
	(forall ((Nat) (Nat) (Nat)) ((plus _qv_16 (mult _qv_17 _qv_18))=(mult (plus _qv_16 _qv_17) (plus _qv_16 _qv_18))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_19 _qv_20))=(plus (succ _qv_19) (succ _qv_20))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_19 _qv_20))=(plus (succ _qv_20) (succ _qv_19))))
	(forall ((Nat) (Nat)) ((succ (mult _qv_21 _qv_22))=(mult (succ _qv_21) (succ _qv_22))))
	(forall ((Nat) (Nat)) ((succ (mult _qv_21 _qv_22))=(mult (succ _qv_22) (succ _qv_21))))
	(forall ((Nat) (Nat)) ((tri (plus _qv_23 _qv_24))=(plus (tri _qv_23) (tri _qv_24))))
	(forall ((Nat) (Nat)) ((tri (plus _qv_23 _qv_24))=(plus (tri _qv_24) (tri _qv_23))))
	(forall ((Nat) (Nat)) ((tri (mult _qv_25 _qv_26))=(mult (tri _qv_25) (tri _qv_26))))
	(forall ((Nat) (Nat)) ((tri (mult _qv_25 _qv_26))=(mult (tri _qv_26) (tri _qv_25))))
	(forall ((Nat) (Nat)) ((cubes (plus _qv_27 _qv_28))=(plus (cubes _qv_27) (cubes _qv_28))))
	(forall ((Nat) (Nat)) ((cubes (plus _qv_27 _qv_28))=(plus (cubes _qv_28) (cubes _qv_27))))
	(forall ((Nat) (Nat)) ((cubes (mult _qv_29 _qv_30))=(mult (cubes _qv_29) (cubes _qv_30))))
	(forall ((Nat) (Nat)) ((cubes (mult _qv_29 _qv_30))=(mult (cubes _qv_30) (cubes _qv_29))))

Simplified goal: (forall ((Nat) (Nat) (Nat)) ((plus x (plus y z))=(plus (plus y x) z)))


Base case:       ((plus zero (plus _v_31 _v_32))=(plus (plus _v_31 zero) _v_32))
{
  proven trivially
}
Inductive step:  ((plus (succ _t_33) (plus _v_31 _v_32))=(plus (plus _v_31 (succ _t_33)) _v_32))
{
  proven trivially
}

Proved
unsat
