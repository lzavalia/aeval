
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Lst)) ((takeWhile (takeWhile _qv_2))=_qv_2))
	(forall ((Nat)) ((nat-to-int (succ _qv_3))=(nat-to-int _qv_3)))

Simplified goal: (forall ((Lst)) ((forall ((Nat)) (P x))->((takeWhile xs)=xs)))


Base case:       ((takeWhile nil)=nil)
{
  proven trivially
}
Inductive step:  ((takeWhile (cons _t_4 _t_5))=(cons _t_4 _t_5))
{
  proven trivially
}

Proved
unsat
