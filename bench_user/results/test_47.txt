
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
	(forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
	(forall ((Nat)) (0<=(nat-to-int _qv_11)))
	(forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
	(forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
	(forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))

Simplified goal: (forall ((Lst)) ((rotate (len x) x)=x))


Base case:       ((rotate (len nil) nil)=nil)
{
  proven trivially
}
Inductive step:  ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat) (Lst)) ((len (cons _qv_1 _qv_2))=(succ (len _qv_2))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_3)=_qv_3))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_4 _qv_5) _qv_6)=(cons _qv_4 (append _qv_5 _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((rotate (succ _qv_8) nil)=nil))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((rotate (succ _qv_9) (cons _qv_10 _qv_11))=(rotate _qv_9 (append _qv_11 (cons _qv_10 nil)))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_13) _qv_14)=(succ (plus _qv_13 _qv_14))))
    | Assumptions [6]: (forall ((Nat)) ((nat-to-int _qv_15)>=0))
    | Assumptions [7]: (forall ((Nat) (Nat)) (((nat-to-int _qv_16)=(nat-to-int _qv_17))->(_qv_16=_qv_17)))
    | Assumptions [8]: (forall ((Nat)) ((nat-to-int (succ _qv_18))=(1+(nat-to-int _qv_18))))
    | Assumptions [9]: (forall ((Nat) (Nat)) ((nat-to-int (plus _qv_19 _qv_20))=((nat-to-int _qv_19)+(nat-to-int _qv_20))))
    | Assumptions [10]: ((rotate (len _t_17) _t_17)=_t_17)
    | Assumptions [11]: (_t_17=(rotate (len _t_17) _t_17))
    | Assumptions [12]: (forall ((Lst)) ((rotate (len nil) _qv_7)=_qv_7))
    | Assumptions [13]: (forall ((Nat)) ((plus (len nil) _qv_12)=_qv_12))
    | Assumptions [14]: ((nat-to-int (len nil))=0)
    | Assumptions [15]: ((rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))=(rotate (len _t_17) _t_17))
    | Assumptions [16]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))=(rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))
    | Assumptions [17]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
    ====================
  }
  rewritten [0]: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [4]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [4]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [0]: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [4]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [4]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [10]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [15]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [10]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [15]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))) (cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))=(cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))) (cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))=(cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [10]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [15]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [10]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [15]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))) (cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))=(cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))) (cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))=(cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [4]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [4]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [10]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [15]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [10]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [15]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))) (cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))=(cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))) (cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))=(cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [10]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [15]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [10]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [15]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))) (cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))=(cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (append (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))) (cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))=(cons _t_16 (rotate (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_16 (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [0]: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [4]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [4]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [0]: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [4]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [4]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
  rewritten [11]: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [4]: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [10]: ((rotate (len _t_17) (append _t_17 (cons _t_16 nil)))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (rotate (len _t_17) _t_17)) (append (rotate (len _t_17) _t_17) (cons _t_16 nil)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [4]: ((rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (append (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)) (cons _t_16 nil)))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
  rewritten [11]: ((rotate (succ (len (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))) (cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))=(cons _t_16 (rotate (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))) (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17)))) (cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))=(cons _t_16 (rotate (len (rotate (len _t_17) _t_17)) (rotate (len _t_17) _t_17))))
CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len (rotate (len _t_17) _t_17))) (cons _t_16 (rotate (len _t_17) _t_17)))=(cons _t_16 (rotate (len _t_17) _t_17)))
CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_16 _t_17)) (cons _t_16 _t_17))=(cons _t_16 _t_17))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_1011))=_qv_1011))
	(forall ((Lst) (Lst)) ((append _qv_1012 _qv_1013)=(append _qv_1013 _qv_1012)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_1014 _qv_1015) _qv_1016)=(append _qv_1014 (append _qv_1015 _qv_1016))))
	(forall ((Nat) (Nat)) ((plus _qv_1017 _qv_1018)=(plus _qv_1018 _qv_1017)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_1019 _qv_1020) _qv_1021)=(plus _qv_1019 (plus _qv_1020 _qv_1021))))
	(forall ((Nat)) (0<=(nat-to-int _qv_1022)))
	(forall ((Nat)) ((nat-to-int (succ _qv_1023))=(nat-to-int _qv_1023)))
	(forall ((Lst)) ((nat-to-int (len _qv_1024))=(nat-to-int _qv_1024)))
	(forall ((Nat) (Nat)) ((succ (plus _qv_1025 _qv_1026))=(plus (succ _qv_1025) (succ _qv_1026))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_1025 _qv_1026))=(plus (succ _qv_1026) (succ _qv_1025))))

