
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
	(forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))

Simplified goal: (forall ((Lst)) ((butlast xs)=(take (minus (len xs) (succ zero)) xs)))


Base case:       ((butlast nil)=(take (minus (len nil) (succ zero)) nil))
{
  proven trivially
}
Inductive step:  ((butlast (cons _t_6 _t_7))=(take (minus (len (cons _t_6 _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
{
  {
    ====================
    | Assumptions [0]: ((butlast nil)=nil)
    | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
    | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
    | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
    | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
    | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
    | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
    | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
    ====================
  }
  rewritten [2]: ((butlast (cons _t_6 _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
  rewritten [1]: ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
  rewritten [6]: (ite(_t_7=nil, nil, (cons _t_6 (butlast _t_7)))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
  proceed with (part 1/2): ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))) to assumptions
  proceed with (part 2/2): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: (_t_7!=nil)
      | Assumptions [14]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: (_t_7!=nil)
      | Assumptions [14]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
  rewritten [8]: ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  rewritten [6]: (ite(_t_7=nil, nil, (cons _t_6 (butlast _t_7)))=(take (len _t_7) (cons _t_6 _t_7)))
  proceed with (part 1/2): ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7)))) to assumptions
  proceed with (part 2/2): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  rewritten [6]: (ite(_t_7=nil, nil, (cons _t_6 (butlast _t_7)))=(take (len _t_7) (cons _t_6 _t_7)))
  proceed with (part 1/2): ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7)))) to assumptions
  proceed with (part 2/2): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
  rewritten [6]: (ite(_t_7=nil, nil, (cons _t_6 (butlast _t_7)))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
  proceed with (part 1/2): ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))) to assumptions
  proceed with (part 2/2): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
  rewritten [8]: ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  rewritten [6]: (ite(_t_7=nil, nil, (cons _t_6 (butlast _t_7)))=(take (len _t_7) (cons _t_6 _t_7)))
  proceed with (part 1/2): ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7)))) to assumptions
  proceed with (part 2/2): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  rewritten [6]: (ite(_t_7=nil, nil, (cons _t_6 (butlast _t_7)))=(take (len _t_7) (cons _t_6 _t_7)))
  proceed with (part 1/2): ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7)))) to assumptions
  proceed with (part 2/2): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
  }
  cannot prove 1 of the subgoals
CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_6 _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_6 _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((butlast (cons _t_6 _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

  backtrack to: ((butlast (cons _t_6 _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
  rewritten [6]: (ite(_t_7=nil, nil, (cons _t_6 (butlast _t_7)))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
  proceed with (part 1/2): ((_t_7=nil)->(nil=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_7=nil)->(nil=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))) to assumptions
  proceed with (part 2/2): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: ((_t_7=nil)->(nil=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7))))
      | Assumptions [15]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
  }
  will try subgoals again
  proceed with (part 1/1): ((_t_7!=nil)->((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat)) ((take _qv_7 nil)=nil))
      | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_9) (cons _qv_10 _qv_11))=(cons _qv_10 (take _qv_9 _qv_11))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((last (cons _qv_12 _qv_13))=ite(_qv_13=nil, _qv_12, (last _qv_13))))
      | Assumptions [6]: (forall ((Nat) (Lst)) ((butlast (cons _qv_14 _qv_15))=ite(_qv_15=nil, nil, (cons _qv_14 (butlast _qv_15)))))
      | Assumptions [7]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [8]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [9]: (forall ((Lst)) ((take (len nil) _qv_8)=nil))
      | Assumptions [10]: ((butlast _t_7)=(take (minus (len _t_7) (succ (len nil))) _t_7))
      | Assumptions [11]: ((take (minus (len _t_7) (succ (len nil))) _t_7)=(butlast _t_7))
      | Assumptions [12]: ((_t_7=nil)->(nil=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7))))
      | Assumptions [13]: ((_t_7=nil)->(nil=(take (len _t_7) (cons _t_6 _t_7))))
      | Assumptions [14]: ((_t_7=nil)->(nil=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7))))
      | Assumptions [15]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [11]: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
    rewritten [1]: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [10]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
    rewritten [8]: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (len _t_7) (cons _t_6 _t_7)))
    Maximum recursion depth reached
CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (take (minus (len _t_7) (succ (len nil))) _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (len _t_7) (len nil)) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
NOW TESTING (forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
USE ASSUMPTION FAILED

    backtrack to: ((cons _t_6 (butlast _t_7))=(take (minus (succ (len _t_7)) (succ (len nil))) (cons _t_6 _t_7)))
CURRENT SUBGOAL ((cons _t