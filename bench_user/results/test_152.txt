
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
	(forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
	(forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))

Simplified goal: (forall ((Nat) (Lst)) ((len (drop n xs))=(minus (len xs) n)))


Base case:       ((len (drop zero _v_11))=(minus (len _v_11) zero))
{
  proven trivially
}
Inductive step:  ((len (drop (succ _t_12) _v_11))=(minus (len _v_11) (succ _t_12)))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
    | Assumptions [4]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
    | Assumptions [6]: (forall ((Nat)) ((drop _qv_13 nil)=nil))
    | Assumptions [7]: (forall ((Nat) (Nat) (Lst)) ((drop (succ _qv_15) (cons _qv_16 _qv_17))=(drop _qv_15 _qv_17)))
    | Assumptions [8]: (forall ((Lst)) ((len (drop _t_12 xs))=(minus (len xs) _t_12)))
    | Assumptions [9]: (forall ((Lst)) ((minus (len xs) _t_12)=(len (drop _t_12 xs))))
    | Assumptions [10]: ((nat-to-int (len nil))=0)
    | Assumptions [11]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
    | Assumptions [12]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
    | Assumptions [13]: (forall ((Lst)) ((drop (len nil) _qv_14)=_qv_14))
    ====================
  }
  rewritten [1]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=(nat-to-int (minus (len _v_11) (succ _t_12))))
  rewritten [4]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=ite((nat-to-int (len _v_11))<(nat-to-int (succ _t_12)), 0, (nat-to-int (len _v_11))-(nat-to-int (succ _t_12))))
  proceed with (part 1/2): (((nat-to-int (len _v_11))<(nat-to-int (succ _t_12)))->((nat-to-int (len (drop (succ _t_12) _v_11)))=0))
  {
    {
      ====================
      | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [3]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [6]: (forall ((Nat)) ((drop _qv_13 nil)=nil))
      | Assumptions [7]: (forall ((Nat) (Nat) (Lst)) ((drop (succ _qv_15) (cons _qv_16 _qv_17))=(drop _qv_15 _qv_17)))
      | Assumptions [8]: (forall ((Lst)) ((len (drop _t_12 xs))=(minus (len xs) _t_12)))
      | Assumptions [9]: (forall ((Lst)) ((minus (len xs) _t_12)=(len (drop _t_12 xs))))
      | Assumptions [10]: ((nat-to-int (len nil))=0)
      | Assumptions [11]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [12]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [13]: (forall ((Lst)) ((drop (len nil) _qv_14)=_qv_14))
      | Assumptions [14]: ((nat-to-int (len _v_11))<(nat-to-int (succ _t_12)))
      | Assumptions [15]: ((nat-to-int (len _v_11))<((nat-to-int _t_12)+1))
      ====================
    }
    current subgoal: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
    rewritten [10]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
    rewritten [14]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
    rewritten [15]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
    rewritten [10]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
    rewritten [14]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
    rewritten [15]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=0)
  }
  proceed with (part 2/2): (((nat-to-int (len _v_11))>=(nat-to-int (succ _t_12)))->((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12))))))
  {
    {
      ====================
      | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
      | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
      | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
      | Assumptions [3]: (forall ((Nat) (Nat)) ((minus (succ _qv_7) (succ _qv_8))=(minus _qv_7 _qv_8)))
      | Assumptions [4]: (forall ((Nat) (Nat)) ((nat-to-int (minus _qv_9 _qv_10))=ite((nat-to-int _qv_9)<(nat-to-int _qv_10), 0, (nat-to-int _qv_9)-(nat-to-int _qv_10))))
      | Assumptions [5]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
      | Assumptions [6]: (forall ((Nat)) ((drop _qv_13 nil)=nil))
      | Assumptions [7]: (forall ((Nat) (Nat) (Lst)) ((drop (succ _qv_15) (cons _qv_16 _qv_17))=(drop _qv_15 _qv_17)))
      | Assumptions [8]: (forall ((Lst)) ((len (drop _t_12 xs))=(minus (len xs) _t_12)))
      | Assumptions [9]: (forall ((Lst)) ((minus (len xs) _t_12)=(len (drop _t_12 xs))))
      | Assumptions [10]: ((nat-to-int (len nil))=0)
      | Assumptions [11]: (forall ((Nat)) ((minus (len nil) _qv_5)=(len nil)))
      | Assumptions [12]: (forall ((Nat)) ((minus _qv_6 (len nil))=_qv_6))
      | Assumptions [13]: (forall ((Lst)) ((drop (len nil) _qv_14)=_qv_14))
      | Assumptions [14]: ((nat-to-int (len _v_11))>=(nat-to-int (succ _t_12)))
      | Assumptions [15]: ((nat-to-int (len _v_11))>=((nat-to-int _t_12)+1))
      ====================
    }
    current subgoal: ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12)))))
    rewritten [2]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(1+(nat-to-int _t_12)))))
    rewritten [10]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    -1    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)])
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
    rewritten [10]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    -1    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)])
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -(nat-to-int _t_12)    -1])
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-(nat-to-int (succ _t_12)))))
    rewritten [10]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
    rewritten [2]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(1+(nat-to-int _t_12)))))
    rewritten [10]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    -1    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)])
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
    rewritten [10]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    -1    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)])
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
    rewritten [2]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(1+(nat-to-int _t_12)))))
    rewritten [10]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    -1    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)])
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
    rewritten [10]: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    -1    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)])
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=[+    (nat-to-int (len _v_11))    -1*(nat-to-int _t_12)    -1*1])
CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_2 _qv_3)=(minus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_4 _qv_5) _qv_6)=(minus _qv_4 (minus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_9) (succ _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_9 _qv_10))=(minus (succ _qv_10) (succ _qv_9))))
USE ASSUMPTION FAILED

    backtrack to: ((nat-to-int (len (drop (succ _t_12) _v_11)))=((nat-to-int (len _v_11))+(-1*(nat-to-int (succ _t_12)))))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
	(forall ((Nat)) (0<=(nat-to-int _qv_15)))
	(forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
	(forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
	(forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero _v_25)))=((nat-to-int (len _v_25))+(-1*(nat-to-int zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len nil))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop zero nil)))=(-1*(nat-to-int zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=((nat-to-int (len nil))+(-1*(nat-to-int _v_26))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=((nat-to-int (len nil))+(-1*(nat-to-int _v_26))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=((nat-to-int (len nil))+(-1*(nat-to-int _v_26))))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=((nat-to-int (len nil))+(-1*(nat-to-int _v_26))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=((nat-to-int (len nil))+(-1*(nat-to-int _v_26))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=((nat-to-int (len nil))+(-1*(nat-to-int _v_26))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=((nat-to-int (len nil))+(-1*(nat-to-int _v_26))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (drop _v_26 nil)))=((nat-to-int (len nil))+(-1*(nat-to-int _v_26))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_28)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int zero)=0)
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((minus _qv_16 _qv_17)=(minus _qv_17 _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_18 _qv_19) _qv_20)=(minus _qv_18 (minus _qv_19 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_22))=(nat-to-int _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (0=(-1*(nat-to-int _v_26)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (minus _qv_23 _qv_24))=(minus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_27))=_qv_27))
	(forall ((Nat)) (0<=(nat-to-int _qv_28)))
	(forall ((Nat) (Nat)) ((minus _qv_29 _qv_30)=(minus _qv_30 _qv_29)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_31 _qv_32) _qv_33)=(minus _qv_31 (minus _qv_32 _qv_33))))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (minus _qv_36 _qv_37))=(minus (succ _qv_37) (succ _qv_36))))

