
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))

Simplified goal: (forall ((Lst) (Nat) (Nat) (Lst)) ((len (append w (cons x (cons y z))))=(succ (succ (len (append w z))))))


Base case:       ((len (append nil (cons _v_5 (cons _v_6 _v_7))))=(succ (succ (len (append nil _v_7)))))
{
  proven trivially
}
Inductive step:  ((len (append (cons _t_8 _t_9) (cons _v_5 (cons _v_6 _v_7))))=(succ (succ (len (append (cons _t_8 _t_9) _v_7)))))
{
  proven trivially
}

Proved
unsat
