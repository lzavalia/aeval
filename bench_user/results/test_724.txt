
The Knowledge Scheme currently contains the following lemmas:
	(forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
	(forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
	(forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
	(forall ((Lst)) (0<=(len _qv_10)))
	(forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
	(forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
	(forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
	(forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
	(forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
	(forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))

Simplified goal: (forall (INT (Lst)) ((rev (drop i xs))=(take (minus (len xs) i) (rev xs))))


Base case:       ((rev (drop _v_21 nil))=(take (minus (len nil) _v_21) (rev nil)))
{
  proven trivially
}
Inductive step:  ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=0)
    | Assumptions [1]: ((rev nil)=nil)
    | Assumptions [2]: (forall (INT) ((_qv_1>=0)->((minus 0 _qv_1)=0)))
    | Assumptions [3]: (forall (INT) ((_qv_2>=0)->((minus _qv_2 0)=_qv_2)))
    | Assumptions [4]: (forall (INT INT) (((_qv_3>=0)&&(_qv_4>=0))->((minus 1+_qv_3 1+_qv_4)=(minus _qv_3 _qv_4))))
    | Assumptions [5]: (forall (INT INT) (((_qv_5>=0)&&(_qv_6>=0))->((minus _qv_5 _qv_6)=ite(_qv_5<_qv_6, 0, _qv_5-_qv_6))))
    | Assumptions [6]: (forall ((Lst)) ((append nil _qv_7)=_qv_7))
    | Assumptions [7]: (forall (INT (Lst) (Lst)) ((append (cons _qv_8 _qv_9) _qv_10)=(cons _qv_8 (append _qv_9 _qv_10))))
    | Assumptions [8]: (forall (INT (Lst)) ((len (cons _qv_11 _qv_12))=(1+(len _qv_12))))
    | Assumptions [9]: (forall ((Lst)) ((len _qv_13)>=0))
    | Assumptions [10]: (forall (INT) ((drop _qv_14 nil)=nil))
    | Assumptions [11]: (forall ((Lst)) ((drop 0 _qv_15)=_qv_15))
    | Assumptions [12]: (forall (INT INT (Lst)) ((_qv_16>=0)->((drop _qv_16+1 (cons _qv_17 _qv_18))=(drop _qv_16 _qv_18))))
    | Assumptions [13]: (forall (INT) ((take _qv_19 nil)=nil))
    | Assumptions [14]: (forall ((Lst)) ((take 0 _qv_20)=nil))
    | Assumptions [15]: (forall (INT INT (Lst)) ((_qv_21>=0)->((take _qv_21+1 (cons _qv_22 _qv_23))=(cons _qv_22 (take _qv_21 _qv_23)))))
    | Assumptions [16]: (forall (INT (Lst)) ((rev (cons _qv_24 _qv_25))=(append (rev _qv_25) (cons _qv_24 nil))))
    | Assumptions [17]: (forall (INT) ((rev (drop i _t_23))=(take (minus (len _t_23) i) (rev _t_23))))
    | Assumptions [18]: (forall (INT) ((take (minus (len _t_23) i) (rev _t_23))=(rev (drop i _t_23))))
    ====================
  }
  rewritten [8]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus 1+(len _t_23) _v_21) (rev (cons _t_22 _t_23))))
  rewritten [16]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (append (rev _t_23) (cons _t_22 nil))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
  rewritten [16]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (append (rev _t_23) (cons _t_22 nil))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
  rewritten [16]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
  rewritten [8]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus 1+(len _t_23) _v_21) (append (rev _t_23) (cons _t_22 nil))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
  rewritten [8]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus 1+(len _t_23) _v_21) (append (rev _t_23) (cons _t_22 nil))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
  rewritten [8]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus 1+(len _t_23) _v_21) (rev (cons _t_22 _t_23))))
  rewritten [16]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (append (rev _t_23) (cons _t_22 nil))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
  rewritten [16]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (append (rev _t_23) (cons _t_22 nil))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len _t_23)+1 _v_21) (rev (cons _t_22 _t_23))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
  rewritten [16]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
  rewritten [8]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus 1+(len _t_23) _v_21) (append (rev _t_23) (cons _t_22 nil))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
  rewritten [8]: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus 1+(len _t_23) _v_21) (append (rev _t_23) (cons _t_22 nil))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (append (rev _t_23) (cons _t_22 nil))))
CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT INT INT) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_12))=(len _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((take _qv_13 (drop _qv_14 _qv_15))=(drop (take _qv_13 _qv_14) (take _qv_13 _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall (INT (Lst) (Lst)) ((drop _qv_16 (take _qv_17 _qv_18))=(take (drop _qv_16 _qv_17) (drop _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_19) (rev _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_19 _qv_20))=(append (rev _qv_20) (rev _qv_19))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (drop _v_21 (cons _t_22 _t_23)))=(take (minus (len (cons _t_22 _t_23)) _v_21) (rev (cons _t_22 _t_23))))
Unknown
sat
